local function highlight(name, opts)
  -- Force links
  opts.force = true
  vim.api.nvim_set_hl(0, name, opts)
end
-- blink.cmp
highlight("BlinkCmpLabelDeprecated", { strikethrough = true })
highlight("BlinkCmpMenuSelection", { link = "MiniHipatternsTodo" })
highlight("BlinkCmpLabel", { link = "NoneText" })
highlight("BlinkCmpScrollBarThumb", { link = "CursorLine" })
highlight("BlinkCmpLabelMatch", { link = "DiffAdd", bold = true, italic = true })
highlight("BlinkCmpKind", { link = "NoneText" })
highlight("BlinkCmpKindField", { link = "MiniHipatternsFixme" })
highlight("BlinkCmpKindProperty", { link = "BlinkCmpKindField" })
highlight("BlinkCmpKindEvent", { link = "BlinkCmpKindField" })
highlight("BlinkCmpKindText", { link = "Question" })
highlight("BlinkCmpKindEnum", { link = "BlinkCmpKindText" })
highlight("BlinkCmpKindKeyword", { link = "BlinkCmpKindText" })
highlight("BlinkCmpKindConstant", { link = "Directory" })
highlight("BlinkCmpKindConstructor", { link = "BlinkCmpKindConstant" })
highlight("BlinkCmpKindReference", { link = "BlinkCmpKindConstant" })
highlight("BlinkCmpKindFunction", { link = "Type" })
highlight("BlinkCmpKindStruct", { link = "BlinkCmpKindFunction" })
highlight("BlinkCmpKindClass", { link = "BlinkCmpKindFunction" })
highlight("BlinkCmpKindModule", { link = "BlinkCmpKindFunction" })
highlight("BlinkCmpKindOperator", { link = "BlinkCmpKindFunction" })
highlight("BlinkCmpKindVariable", { link = "Structure" })
highlight("BlinkCmpKindFile", { link = "BlinkCmpKindVariable" })
highlight("BlinkCmpKindUnit", { link = "Type" })
highlight("BlinkCmpKindSnippet", { link = "BlinkCmpKindUnit" })
highlight("BlinkCmpKindFolder", { link = "BlinkCmpKindUnit" })
highlight("BlinkCmpKindMethod", { link = "Define" })
highlight("BlinkCmpKindValue", { link = "BlinkCmpKindMethod" })
highlight("BlinkCmpKindEnumMember", { link = "BlinkCmpKindMethod" })
highlight("BlinkCmpKindInterface", { link = "Statement" })
highlight("BlinkCmpKindColor", { link = "BlinkCmpKindInterface" })
highlight("BlinkCmpKindTypeParameter", { link = "BlinkCmpKindInterface" })

-- Misc. mainly my custom stuff --
highlight("OverLength", { fg = nil, bg = "#252525", ctermbg = 234, ctermfg = nil })
highlight("GitMarker", { link = "OverLength" })

-- LspDiagnostics --
highlight("LspDiagnosticsDefaultError", { link = "DiffDelete" })
highlight("LspDiagnosticsDefaultWarning", { link = "DiffChange" })
highlight("LspDiagnosticsDefaultHint", { link = "NonText" })
highlight("LspInlayHint", { fg = "#252525", bg = nil, italic = true })
highlight("LspReferenceRead", { link = "SpecialKey" })
highlight("LspReferenceText", { link = "SpecialKey" })
highlight("LspReferenceWrite", { link = "SpecialKey" })
